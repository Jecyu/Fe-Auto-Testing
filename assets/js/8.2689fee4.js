(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{187:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("Travis CI 目前有两个网站，一个是 travis-ci.com，另一个是 travis-ci.org. 前者用于企业级和私有仓库，后者用于开源的公有仓库。实际上 free plan 也可以使用 travis-ci.com，但优先级很低，跑个自动化动辄两个小时，因此我们使用 travis-ci.org.")]),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("要在github项目上设置Travis-CI，您所要做的就是")]),t._v(" "),e("ul",[e("li",[t._v("在项目的根目录下，添加一个 "),e("a",{attrs:{href:"http://docs.travis-ci.com/user/customizing-the-build/",target:"_blank",rel:"noopener noreferrer"}},[t._v(".travis.yml"),e("OutboundLink")],1),t._v(" 文件")]),t._v(" "),t._m(3)]),t._v(" "),e("p",[t._v("首先打开 "),e("a",{attrs:{href:"https://travis-ci.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Travis CI 官网"),e("OutboundLink")],1),t._v("，并用 GitHub 账号登录，授权后 Travis CI 会同步你的仓库信息。接下来把需要做自动化的工程授权给 Travis CI.")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/assets/travis.png")}}),t._v(" "),e("p",[t._v("最好有一台 Linux 的服务器，我的是 Cent OS 7.6.x 64bit.")]),t._v(" "),e("p",[t._v("我们点开一个工程，再切到设置，可以看到在 push 代码和 PR 时都会触发持续集成，当然可以根据需求手动配置")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/assets/travis-setting.png")}}),t._v(" "),t._m(4),t._v(" "),e("p",[t._v("我们先在 master 上切一个 develop 分支，再在 test 上切一个 featur/ci（或者是个人分支） 分支，这里我以这个项目为例子。"),e("a",{attrs:{href:"https://github.com/Jecyu/daily",target:"_blank",rel:"noopener noreferrer"}},[t._v("daily"),e("OutboundLink")],1)]),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._m(11),t._v(" "),e("p",[t._v("在这里我们可以设置依赖包的资源，否则下载会比较慢。")]),t._v(" "),t._m(12),t._v(" "),e("p",[t._v("因此，理论上只要跑通这套流程，我们就可以放心的部署到真实环境了。")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/assets/travis-ci-github.png")}}),t._v(" "),t._m(13),t._v(" "),e("p",[t._v("安装依赖 -> 测试 -> 沙箱部署。")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/assets/travis-build-process.png")}}),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),e("img",{attrs:{src:t.$withBase("/assets/travis-build-img.png")}}),t._v(" "),e("img",{attrs:{src:t.$withBase("/assets/travis-icon.png")}}),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"travis-ci"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#travis-ci","aria-hidden":"true"}},[this._v("#")]),this._v(" Travis CI")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("Travis CI")]),this._v(" 提供的是持续集成服务（Continuous Integration，简称 CI）。它绑定 Github 上面的项目，只要有新的代码，就会自动抓取。然后，提供一个运行环境，执行测试，完成构建，还能部署到服务器。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤","aria-hidden":"true"}},[this._v("#")]),this._v(" 步骤")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("进入 "),s("a",{attrs:{href:""}},[this._v("travis-ci.com")]),this._v(" 创建一个账号，然后激活你的 github 项目")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"持续集成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持续集成","aria-hidden":"true"}},[this._v("#")]),this._v(" 持续集成")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" branch\n* linjy\n  master\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[this._v("test")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("然后我们在工程的根目录下新建一个文件 "),s("code",[this._v(".travis.yml")]),this._v("，并复制下面的代码。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接着我们再用 Jest 写几个测试用例，注意如果项目中没有测试脚本而 "),s("code",[this._v(".travis.yml")]),this._v(" 文件里面包含 "),s("code",[this._v("yarn test")]),this._v("，自动化 一定 报错。下面是展示例子")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("bu")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("bu"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Empty string"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("bu"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("然后我们在工程的根目录下新建一个文件 "),s("code",[this._v(".travis.yml")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("language: node_js\nnode_js:\n  - "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("\nbranchs:\n  only:\n    - master\ncache:\n  directories:\n    - node_modules\ninstall:\n  - "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\nscripts:\n  - "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n  - "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" build\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("工程使用 "),e("code",[t._v("Node.js 11.x")]),t._v("，并且只在 "),e("code",[t._v("master")]),t._v(" 分支有变动时触发"),e("strong",[t._v("自动化部署")]),t._v("（正常的提交、PR 都会正常走持续集成），接着将 "),e("code",[t._v("node_modules")]),t._v(" 缓存起来（你懂的），最后安装依赖、跑测试脚本、在沙箱部署。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("提交一下个人分支 "),e("code",[t._v("linjy")]),t._v("代码，并 "),e("code",[t._v("pull request")]),t._v(" 到 "),e("code",[t._v("test")]),t._v(" 分支。在此过程中我们触发了 "),e("code",[t._v("push")]),t._v(" 和 "),e("code",[t._v("PR")]),t._v("，所以会跑两个 CI。待到两个都成功跑完后，我们就可以放心的合到"),e("code",[t._v("test")]),t._v("分支了。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("最后我们回到 Travis CI 的官网，打开 daily 项目下的 "),s("code",[this._v("job log")]),this._v("，可以看到一套完整的构建流程：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"持续部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持续部署","aria-hidden":"true"}},[this._v("#")]),this._v(" 持续部署")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"加入徽章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加入徽章","aria-hidden":"true"}},[this._v("#")]),this._v(" 加入徽章")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接下里，让我们给 README.md 添加上徽章，让它显得更加具有吸引力。\n在 Travis CI  对应的项目上，点击右边的头像即可以看到徽章的地址，把它 copy 到你的项目 "),s("code",[this._v("README.md")]),this._v(" 文件中即可。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("让我们总结下 "),s("code",[this._v("travis ci")]),this._v(" 一遍正式的流程:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ol",[e("li",[e("p",[t._v("我们先在 "),e("code",[t._v("feature/ci")]),t._v(" 分支修改一段代码，提交分支，并 "),e("code",[t._v("PR")]),t._v(" 到 "),e("code",[t._v("test")]),t._v("，此时会运行两个 CI。当两个 CI 都跑通了，我们可以放心的 "),e("code",[t._v("merge request")]),t._v(" 到 "),e("code",[t._v("test")]),t._v(" 分支。")])]),t._v(" "),e("li",[e("p",[t._v("接下来让 "),e("code",[t._v("test")]),t._v(" PR 到 "),e("code",[t._v("master")]),t._v("，此时会运行两个 CI（一个是 develop 分支，一个是测试合并到 master 的 CI）。当两个 CI 都跑通了，我们可以放心的 "),e("code",[t._v("merge request")]),t._v(" 到 "),e("code",[t._v("master")]),t._v(" 分支。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("merge request")]),t._v(" 之后会跑最后一个流程, 也就是自动部署，部署成功后线上代码就会更新了。")])])])}],!1,null,null,null);s.default=n.exports}}]);